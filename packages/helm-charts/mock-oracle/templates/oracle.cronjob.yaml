apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}
  labels:
    app: oracle
    chart: oracle
    release: {{ .Release.Service }}
    component: oracle
spec:
  schedule: "{{ .Values.oracle.cronSchedule }}"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        spec:
          initContainers:
          - name: get-current-price
            image: {{ .Values.oracle.image.repository }}:{{ .Values.oracle.image.tag }}
            imagePullPolicy: IfNotPresent
            command:
              - sh
              - "-c"
              - |
                ./current_rate.sh > /planq/.celo/current_price
            volumeMounts:
            - name: data
              mountPath: /planq/.celo
          - name: get-account
            image: {{ .Values.planqtool.image.repository }}:{{ .Values.planqtool.image.tag }}
            imagePullPolicy: IfNotPresent
            command: ["/bin/sh"]
            args:
            - "-c"
            - |
              planqtooljs.sh generate bip32 --mnemonic "$MNEMONIC" --accountType price_oracle --index 0 > /planq/.celo/pkey
              planqtooljs.sh generate account-address --private-key `cat /planq/.celo/pkey` > /planq/.celo/account
            volumeMounts:
            - name: data
              mountPath: /planq/.celo
            env:
            - name: MNEMONIC
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: MNEMONIC
          containers:
          - name: report-price
            image: {{ .Values.planqcli.image.repository }}:{{ .Values.planqcli.image.tag }}
            imagePullPolicy: IfNotPresent
            command: ["/bin/sh"]
            args:
            - "-c"
            - |
              PRICE=`cat /planq/.celo/current_price`
              echo 'current price:'
              echo $PRICE
              PK=`cat /planq/.celo/pkey`
              ACCOUNT=`cat /planq/.celo/account`
              planqcli config:set --node {{ .Values.planqcli.nodeUrl }}
              planqcli oracle:report StableToken --numerator $PRICE --privateKey $PK --from $ACCOUNT
            volumeMounts:
            - name: data
              mountPath: /planq/.celo
            env:
            - name: MNEMONIC
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: MNEMONIC
          restartPolicy: Never
          volumes:
            - name: data
              emptyDir: {}
